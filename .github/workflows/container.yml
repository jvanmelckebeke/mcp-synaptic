name: Container Build & Publish

on:
  push:
    branches: [dev, main]  # Build dev and main branches
    tags: ['v*']           # Build all version tags
  workflow_dispatch:
    inputs:
      force_push:
        description: 'Force push images (bypass cache)'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      json: ${{ steps.meta.outputs.json }}
    steps:
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Dev branch tags
            type=raw,value=dev-latest,enable=${{ github.ref == 'refs/heads/dev' }}
            type=sha,prefix=dev-,format=short,enable=${{ github.ref == 'refs/heads/dev' }}
            type=raw,value=dev-{{date 'YYYY-MM-DD'}},enable=${{ github.ref == 'refs/heads/dev' }}
            # Main branch tags  
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            # Semantic versioning for tags
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.title=MCP Synaptic
            org.opencontainers.image.description=MCP server with RAG and memory capabilities
            org.opencontainers.image.vendor=MCP Synaptic Team
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.url=https://github.com/jvanmelckebeke/mcp-synaptic
            org.opencontainers.image.source=https://github.com/jvanmelckebeke/mcp-synaptic
            org.opencontainers.image.documentation=https://github.com/jvanmelckebeke/mcp-synaptic/blob/main/README.md

  build:
    runs-on: ubuntu-latest
    needs: metadata
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        variant: [lightweight]
        # TODO: Re-enable full variant once disk space issue is resolved (see issue #32)
        # variant: [lightweight, full]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          driver-opts: |
            network=host

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Skip build context preparation for lightweight only

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ needs.metadata.outputs.tags }}
          labels: ${{ needs.metadata.outputs.labels }}
          cache-from: |
            type=gha,scope=${{ github.ref_name }}-lightweight
            type=gha,scope=main-lightweight
          cache-to: type=gha,mode=max,scope=${{ github.ref_name }}-lightweight
          build-args: |
            BUILDKIT_INLINE_CACHE=1


  cleanup:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'schedule' || github.event.inputs.force_push == 'true'
    permissions:
      packages: write
    steps:
      - name: Delete old container images
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'mcp-synaptic'
          package-type: 'container'
          min-versions-to-keep: 10
          delete-only-untagged-versions: false