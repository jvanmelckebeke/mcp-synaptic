version: '3.8'

services:
  mcp-synaptic:
    build: .
    container_name: mcp-synaptic
    ports:
      - "8000:8000"
    env_file:
      - ./envs/synaptic.env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - synaptic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: mcp-synaptic-redis
    command: redis-server --appendonly yes --appendfsync everysec
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - synaptic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Redis Web UI for development
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mcp-synaptic-redis-ui
    env_file:
      - ./envs/redis.env
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - synaptic-network
    restart: unless-stopped
    profiles:
      - dev

volumes:
  redis-data:
    driver: local

networks:
  synaptic-network:
    driver: bridge